---
import '../styles/global.css';
---

<header
  class='sticky z-50 top-0 backdrop-blur-lg transition-all select-none bg-white/80 dark:bg-black bg-gradient-to-b from-orange-50 dark:from-slate-900 dark:to-transparent'
>
  <div
    class='flex items-center justify-around h-24 dark:text-white text-orange-600 mx-2'
  >
    <a href='/' class='text-2xl sm:text-3xl font-bold'> Yavnik's Blog </a>
    <div class='flex gap-4 items-center'>
      <button id='theme-toggle' class='text-2xl sm:text-3xl'></button>
      <a
        id='github-button'
        href='https://github.com/Yavnik'
        target='_blank'
        aria-label='GitHub'
      >
        <svg
          xmlns='http://www.w3.org/2000/svg'
          x='0px'
          y='0px'
          width='36'
          height='36'
          viewBox='0 0 30 30'
          class='dark:fill-white w-[24px] sm:w-[36px] h-[24px] sm:h-[36px]'
        >
          <path
            d='M15,3C8.373,3,3,8.373,3,15c0,5.623,3.872,10.328,9.092,11.63C12.036,26.468,12,26.28,12,26.047v-2.051 c-0.487,0-1.303,0-1.508,0c-0.821,0-1.551-0.353-1.905-1.009c-0.393-0.729-0.461-1.844-1.435-2.526 c-0.289-0.227-0.069-0.486,0.264-0.451c0.615,0.174,1.125,0.596,1.605,1.222c0.478,0.627,0.703,0.769,1.596,0.769 c0.433,0,1.081-0.025,1.691-0.121c0.328-0.833,0.895-1.6,1.588-1.962c-3.996-0.411-5.903-2.399-5.903-5.098 c0-1.162,0.495-2.286,1.336-3.233C9.053,10.647,8.706,8.73,9.435,8c1.798,0,2.885,1.166,3.146,1.481C13.477,9.174,14.461,9,15.495,9 c1.036,0,2.024,0.174,2.922,0.483C18.675,9.17,19.763,8,21.565,8c0.732,0.731,0.381,2.656,0.102,3.594 c0.836,0.945,1.328,2.066,1.328,3.226c0,2.697-1.904,4.684-5.894,5.097C18.199,20.49,19,22.1,19,23.313v2.734 c0,0.104-0.023,0.179-0.035,0.268C23.641,24.676,27,20.236,27,15C27,8.373,21.627,3,15,3z'
          ></path>
        </svg>
      </a>
      <a
        id='twitter-button'
        href='https://x.com/paired_electron'
        target='_blank'
        aria-label='Paired Electron'
      >
        <svg
          xmlns='http://www.w3.org/2000/svg'
          x='0px'
          y='0px'
          width='36'
          height='36'
          viewBox='0 0 50 50'
          class='dark:fill-white w-[24px] sm:w-[36px] h-[24px] sm:h-[36px]'
        >
          <path
            d='M 11 4 C 7.134 4 4 7.134 4 11 L 4 39 C 4 42.866 7.134 46 11 46 L 39 46 C 42.866 46 46 42.866 46 39 L 46 11 C 46 7.134 42.866 4 39 4 L 11 4 z M 13.085938 13 L 21.023438 13 L 26.660156 21.009766 L 33.5 13 L 36 13 L 27.789062 22.613281 L 37.914062 37 L 29.978516 37 L 23.4375 27.707031 L 15.5 37 L 13 37 L 22.308594 26.103516 L 13.085938 13 z M 16.914062 15 L 31.021484 35 L 34.085938 35 L 19.978516 15 L 16.914062 15 z'
          ></path>
        </svg>
      </a>
    </div>
  </div>
</header>
<script>
  const LIGHT_ICON = 'ðŸŒž';
  const DARK_ICON = 'ðŸŒ™';

  const themeToggle = document.getElementById('theme-toggle') as HTMLElement;
  const theme = localStorage.getItem('theme');
  import * as Swetrix from 'swetrix';

  // Define the custom event type
  interface ThemeChangedEvent extends CustomEvent {
    detail: {
      isDark: boolean;
    };
  }

  // Dispatch theme changed event
  function dispatchThemeEvent(isDark: boolean) {
    const event = new CustomEvent('themeChanged', {
      detail: { isDark },
    });
    document.dispatchEvent(event);
  }

  // Initialize theme
  function setTheme(isDark: boolean) {
    if (isDark) {
      themeToggle.innerText = DARK_ICON;
      if (!document.documentElement.classList.contains('dark')) {
        document.documentElement.classList.add('dark');
        dispatchThemeEvent(true);
        Swetrix.track({
          ev: 'dark_mode_enabled',
          meta: {
            page: window.location.pathname,
          },
        });
      }
    } else {
      themeToggle.innerText = LIGHT_ICON;
      if (document.documentElement.classList.contains('dark')) {
        document.documentElement.classList.remove('dark');
        dispatchThemeEvent(false);
        Swetrix.track({
          ev: 'light_mode_enabled',
          meta: {
            page: window.location.pathname,
          },
        });
      }
    }
  }

  // Set initial theme
  setTheme(theme === 'dark');

  // Listen for theme change events from system changes
  document.addEventListener('themeChanged', ((event: ThemeChangedEvent) => {
    if (!localStorage.getItem('userTheme')) {
      themeToggle.innerText = event.detail.isDark ? DARK_ICON : LIGHT_ICON;
    }
  }) as EventListener);

  // Handle theme toggle click
  themeToggle.addEventListener('click', () => {
    const isDark = !document.documentElement.classList.contains('dark');
    setTheme(isDark);
    // Store both the theme and user's explicit preference
    localStorage.setItem('theme', isDark ? 'dark' : 'light');
    localStorage.setItem('userTheme', 'true');
  });

  // Also dispatch an initial theme event once DOM is fully loaded
  document.addEventListener('DOMContentLoaded', () => {
    dispatchThemeEvent(document.documentElement.classList.contains('dark'));
  });

  const githubButton = document.getElementById(
    'github-button'
  ) as HTMLAnchorElement;
  const twitterButton = document.getElementById(
    'twitter-button'
  ) as HTMLAnchorElement;

  // Track GitHub and Twitter button clicks

  githubButton.addEventListener('click', () => {
    Swetrix.track({
      ev: 'github_button_click',
      unique: true,
      meta: {
        page: window.location.pathname,
      },
    });
  });

  twitterButton.addEventListener('click', () => {
    Swetrix.track({
      ev: 'twitter_button_click',
      unique: true,
      meta: {
        page: window.location.pathname,
      },
    });
  });
</script>
