---

---

<style>
  body {
    margin: 0;
    overflow: hidden;
    background-color: rgb(18, 18, 18);
  }

  #starryCanvas {
    display: block;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
  }
</style>

<canvas id='starryCanvas'></canvas>

<script is:inline>
  const canvas = document.getElementById('starryCanvas');
  const ctx = canvas.getContext('2d', { alpha: false }); // Optimize for non-transparent background
  const stars = [];
  const numStars = 500;
  const starColor = 'rgba(255, 255, 255, 0.8)';
  const twinkleSpeed = 0.01;
  let animationFrameId;

  const updateCanvasSize = () => {
    const dpr = window.devicePixelRatio || 1;
    const rect = canvas.getBoundingClientRect();

    canvas.width = rect.width * dpr;
    canvas.height = rect.height * dpr;

    ctx.scale(dpr, dpr); // Scale for retina displays
  };

  const resizeHandler = () => {
    updateCanvasSize();
    initStars();
  };

  function createStar() {
    return {
      x: Math.random() * canvas.width,
      y: Math.random() * canvas.height,
      radius: Math.random() * 1.5,
      opacity: Math.random(),
      twinkleDir: Math.random() > 0.5 ? 1 : -1,
    };
  }

  function initStars() {
    stars.length = 0;
    const width = canvas.width / (window.devicePixelRatio || 1);
    const height = canvas.height / (window.devicePixelRatio || 1);

    for (let i = 0; i < numStars; i++) {
      const star = createStar();
      star.x = Math.random() * width;
      star.y = Math.random() * height;
      stars.push(star);
    }
  }

  function drawStars() {
    ctx.clearRect(0, 0, canvas.width, canvas.height);
    ctx.fillStyle = starColor;

    for (const star of stars) {
      ctx.globalAlpha = star.opacity;
      ctx.beginPath();
      ctx.arc(star.x, star.y, star.radius, 0, Math.PI * 2);
      ctx.fill();
    }
  }

  function updateStars() {
    for (const star of stars) {
      star.opacity += twinkleSpeed * star.twinkleDir;
      if (star.opacity >= 1) {
        star.twinkleDir = -1;
        star.opacity = 1;
      } else if (star.opacity <= 0) {
        star.twinkleDir = 1;
        star.opacity = 0;
      }
    }
  }

  function animateStars() {
    updateStars();
    drawStars();
    animationFrameId = requestAnimationFrame(animateStars);
  }

  // Initialize
  updateCanvasSize();
  window.addEventListener('resize', resizeHandler);
  initStars();
  animateStars();
</script>
